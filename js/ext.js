"use strict";export const browser=self.browser instanceof Object&&self.browser instanceof Element==!1?self.browser:self.chrome;export const dnr=browser.declarativeNetRequest;export const i18n=browser.i18n;export const runtime=browser.runtime;export function sendMessage(e){return new Promise(((t,r)=>{let o=5;const s=()=>{runtime.sendMessage(e).then((e=>{t(e)})).catch((e=>{o-=1,o<=0?r(e):setTimeout(s,200)}))};s()}))}export async function localRead(e){if(browser.storage instanceof Object!=!1&&browser.storage.local instanceof Object!=!1)try{const t=await browser.storage.local.get(e);if(t instanceof Object==!1)return;return t[e]??void 0}catch(e){}}export async function localWrite(e,t){if(browser.storage instanceof Object!=!1&&browser.storage.local instanceof Object!=!1)return browser.storage.local.set({[e]:t})}export async function localRemove(e){if(browser.storage instanceof Object!=!1&&browser.storage.local instanceof Object!=!1)return browser.storage.local.remove(e)}export async function sessionRead(e){if(browser.storage instanceof Object!=!1&&browser.storage.session instanceof Object!=!1)try{const t=await browser.storage.session.get(e);if(t instanceof Object==!1)return;return t[e]??void 0}catch(e){}}export async function sessionWrite(e,t){if(browser.storage instanceof Object!=!1&&browser.storage.session instanceof Object!=!1)return browser.storage.session.set({[e]:t})}export async function adminRead(e){if(browser.storage instanceof Object!=!1&&browser.storage.local instanceof Object!=!1)try{const t=await browser.storage.managed.get(e);if(t instanceof Object==!1)return;return t[e]??void 0}catch(e){}}